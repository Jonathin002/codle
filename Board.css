html,
body {
  animation-name: backgroundColorPalette;
  animation-duration: 5s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
  /* linear is enabled default, itâ€™s not necessary to add it make it work but it can make your code more expressive */
}

@keyframes backgroundColorPalette {
  0% {
    background: #188148;
  }
  25% {
    background: #10b1a0;
  }
  50% {
    background: #908c09;
  }
  75% {
    background: #d39a10;
  }
  100% {
    background: #b22708;
  }
}

#container {
  display: flex;
  height: 100%;
  align-items: center;
  flex-direction: column;
}

#game {
  width: 105%;
  max-width: 600px;
  height: 105%;
  display: flex;
  flex-direction: column;
}

.title {
  text-align: center;
  font-family: Fantasy, Copperplate;
  font-size: 40px;
}

h2 {
  color: transparent;
  text-align: center;
  animation: effect 0.5s linear infinite;
}

@keyframes effect {
  0% {
    background: linear-gradient(#008000, #00ff00);
    -webkit-background-clip: text;
  }

  100% {
    background: linear-gradient(#3ce7d7, #000fff);
    -webkit-background-clip: text;
  }
}

#boardCont {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-grow: 1;
  overflow: hidden;
}

#board {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-gap: 5px;
  padding: 10px;
  box-sizing: border-box;
}

.square {
  border: 2px solid white;
  min-width: 60px;
  min-height: 60px;
  font-size: 50px;
  font-weight: bold;
  color: gainsboro;
  text-transform: uppercase;

  display: flex;
  justify-content: center;
  align-items: center;
  background: black;
}

#keyboard-container {
  height: 200px;
}

.keyboard-row {
  display: flex;
  justify-content: center;
  width: 100%;
  margin: 0 auto 8px;
  touch-action: manipulation;
}

.keyboard-row button {
  font-family: inherit;
  font-weight: bold;
  border: 0;
  padding: 0;
  height: 58px;
  cursor: pointer;
  background-color: green;
  color: rgb(215, 218, 220);
  flex-grow: 1;
  text-transform: uppercase;
  margin-right: 6px;
  border-radius: 4px;
  user-select: none;
}

.keyboard-row button.wide {
  flex-grow: 1.5;
}

.spacer-half {
  flex-grow: 0.5;
}

/* Popup container */
.popup {
  position: relative;
  display: inline-block;
  cursor: pointer;
}

/* The actual popup (appears on top) */
.popup .popuptext {
  visibility: hidden;
  width: 160px;
  color: #ffffff;
  text-align: center;
  border-radius: 6px;
  padding: 8px 0;
  position: absolute;
  z-index: 1;
  bottom: 125%;
  left: 50%;
  margin-left: -80px;
}

/* Popup arrow */
.popup .popuptext::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555555 transparent transparent transparent;
}

/* Toggle this class when clicking on the popup container (hide and show the popup) */
.popup .show {
  visibility: visible;
  -webkit-animation: fadeIn 1.2s;
  animation: fadeIn 1.2s;
}

/* Add animation (fade in the popup) */
@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

* {
  margin: 0;
  padding: 0;
}
